# suppress inspection "UnusedProperty" for whole file
#
# Copyright (C) 2014 Picon software
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#

global.app.base.dir=target/

req1.name=Categories
req1.disabled=false
req1.sql=SELECT categoryID as id FROM invCategories where published = 1
req1.field1=id
req1.fieldStrPos=1
req1.numberPos=0
req1.compressedStrPos=20
req1.table=categories

req2.name=Groups
req2.disabled=false
req2.sql=SELECT groupID as id,categoryID as categorie_id FROM invGroups where published = 1
req2.field1=id
req2.field2=categorie_id
req2.fieldStrPos=2
req2.numberPos=0,1
req2.compressedStrPos=20
req2.table=groups

req3.name=Items
req3.disabled=false
req3.sql=SELECT i.typeID,i.volume,i.portionSize,i.groupID,mt.metaGroupID,mt.parentTypeID,NULL as field1,NULL as field2,NULL as field3 FROM invTypes i JOIN invGroups g on (i.groupID = g.groupID and g.published = 1) JOIN invCategories c on (g.categoryID = c.categoryID and c.published = 1) left JOIN invMetaTypes mt on (i.typeID = mt.typeID) where i.published = 1 order by g.categoryID, g.groupID, i.typeID
req3.field1=typeID
req3.field2=volume
req3.field3=portionSize
req3.field4=groupID
req3.field5=metaGroupID
req3.field6=parentTypeID
req3.field8=field1
req3.field9=field2
req3.field10=field3
req3.fieldStrPos=20
req3.numberPos=0,1,2,3,4,5
req3.compressedStrPos=20
req3.table=item

#req4.name=Blueprint
#req4.disabled=true
#req4.sql=SELECT blueprintTypeID,i.typeName as typeName,productTypeID,product.portionSize as portionSize,maxProductionLimit,productionTime,productivityModifier,researchCopyTime,researchMaterialTime,researchProductivityTime,techLevel,researchTechTime,mt.parentTypeID as parentTypeID,NULL as field1,NULL as field2,NULL as field3,NULL as field4,NULL as field5 FROM invBlueprintTypes b LEFT OUTER JOIN invTypes i ON (b.blueprintTypeID = i.typeID) LEFT OUTER JOIN invTypes product ON (b.productTypeID = product.typeID) LEFT OUTER JOIN invMetaTypes mt	ON (mt.typeID = product.typeID) LEFT OUTER JOIN invTypes i2	ON (i2.typeID = product.typeID) LEFT OUTER JOIN invGroups g	ON (i2.groupID = g.groupID)	where i.typeName not like '%test%' and i.published = 1 and g.published = 1 UNION SELECT pst.typeID,i.typeName,pst.typeID,pst.quantity,NULL,ps.cycleTime,NULL,NULL,NULL,NULL	,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL FROM planetSchematicsTypeMap pst LEFT OUTER JOIN invTypes i on (pst.typeID = i.typeID) LEFT OUTER JOIN planetSchematics ps on (pst.schematicID = ps.schematicID) where isInput = 0 UNION SELECT itr.reactionTypeID, i2.typeName, itr.typeID, (itr.quantity * d.valueInt) AS quantity, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL FROM invTypeReactions itr JOIN invTypes i ON (itr.typeID = i.typeID) JOIN invTypes i2 ON (itr.reactionTypeID = i2.typeID) JOIN invGroups g ON (i.groupID = g.groupID) JOIN dgmTypeAttributes d ON (i.typeID = d.typeID AND d.attributeID = 726) WHERE input = 0 AND g.categoryID <> 17 AND itr.typeID NOT IN (3683, 3645) AND i2.typeName NOT LIKE 'Unrefined%' UNION SELECT itr.reactionTypeID, i2.typeName, itr.typeID, itr.quantity, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL FROM invTypeReactions itr JOIN invTypes i ON (itr.typeID = i.typeID) JOIN invTypes i2 ON (itr.reactionTypeID = i2.typeID) JOIN invGroups g ON (i.groupID = g.groupID) WHERE input = 0 AND g.categoryID <> 17 AND itr.typeID NOT IN (3683, 3645) AND (i2.typeName LIKE 'Unrefined%' OR i2.groupID = 977) order by blueprintTypeID
#req4.field1=blueprintTypeID
#req4.field2=typeName
#req4.field3=productTypeID
#req4.field4=portionSize
#req4.field5=maxProductionLimit
#req4.field6=productionTime
#req4.field7=productivityModifier
#req4.field8=researchCopyTime
#req4.field9=researchMaterialTime
#req4.field10=researchProductivityTime
#req4.field11=techLevel
#req4.field12=researchTechTime
#req4.field13=parentTypeID
#req4.field14=field1
#req4.field15=field2
#req4.field16=field3
#req4.field17=field4
#req4.field18=field5
#req4.fieldStrPos=1
#req4.compressedStrPos=20
#req4.table=blueprint

#req5.name=Item materials
#req5.disabled=true
#req5.sql=SELECT NULL AS field1, t.typeID AS typeID, materialTypeID, sum(quantity) AS quantity, NULL AS damagePerJob, NULL AS activityID FROM (SELECT tm.typeID, tm.materialTypeID, tm.quantity FROM invBlueprintTypes b LEFT OUTER JOIN invTypes i ON (b.blueprintTypeID = i.typeID) LEFT OUTER JOIN invTypes product ON (b.productTypeID = product.typeID) LEFT OUTER JOIN invTypeMaterials tm ON (b.productTypeID = tm.typeID) WHERE tm.typeID IS NOT null AND tm.materialTypeID IS NOT null UNION SELECT b.productTypeID AS typeID, itm.materialTypeID, -itm.quantity FROM ramTypeRequirements r LEFT OUTER JOIN invBlueprintTypes b ON (r.typeID = b.blueprintTypeID) LEFT OUTER JOIN invTypeMaterials itm ON r.requiredTypeID = itm.typeID WHERE activityID = 1 AND recycle = 1 AND b.productTypeID IS NOT null AND r.requiredTypeID IS NOT null) t LEFT JOIN invTypes i ON t.typeID = i.typeID WHERE i.published = 1 GROUP BY t.typeID, materialTypeID HAVING sum(quantity) > 0 UNION SELECT NULL, tm.typeID, tm.materialTypeID, tm.quantity, NULL, NULL FROM invTypeMaterials tm LEFT OUTER JOIN invTypes i2 ON (tm.typeID = i2.typeID) LEFT OUTER JOIN invGroups g ON (i2.groupID = g.groupID) WHERE tm.typeID IS NOT null AND tm.materialTypeID IS NOT null AND g.categoryID = 25 AND i2.published = 1 UNION SELECT NULL, b.productTypeID, r.requiredTypeID, quantity, damagePerJob, activityID FROM ramTypeRequirements r LEFT OUTER JOIN invTypes produce ON (r.requiredTypeID = produce.typeID) LEFT OUTER JOIN invBlueprintTypes b ON (r.typeID = b.blueprintTypeID) LEFT OUTER JOIN invGroups g ON (produce.groupID = g.groupID) WHERE activityID IN (1, 3, 4, 5, 7, 8) AND b.productTypeID IS NOT null AND r.requiredTypeID IS NOT null UNION SELECT NULL, pst2.typeID, pst.typeID, pst.quantity, 1 AS damagePerJob, 1 AS activityID FROM planetSchematicsTypeMap pst LEFT OUTER JOIN invTypes i ON (pst.typeID = i.typeID) LEFT OUTER JOIN planetSchematics ps ON (pst.schematicID = ps.schematicID) LEFT OUTER JOIN planetSchematicsTypeMap pst2 ON (pst2.schematicID = pst.schematicID AND pst2.isInput = 0) WHERE pst.isInput = 1 UNION SELECT NULL, itr2.typeID AS typeID, itr.typeID AS materialTypeID, (itr.quantity * IFNULL(d.valueInt, d.valueFloat)) AS quantity, 1 AS damagePerJob, 1 AS activityID FROM invTypeReactions itr JOIN invTypes i ON (itr.typeID = i.typeID AND i.published = 1) JOIN invTypeReactions itr2 ON (itr2.reactionTypeID = itr.reactionTypeID AND itr2.input = 0) JOIN invTypes i2 ON (itr2.typeID = i2.typeID AND i2.published = 1) JOIN invGroups g ON (i2.groupID = g.groupID AND g.categoryID NOT IN (17, 43)) JOIN dgmTypeAttributes d ON (i.typeID = d.typeID AND d.attributeID = 726) WHERE itr.input = 1 AND i2.typeName NOT LIKE 'Unrefined%' UNION SELECT NULL, itr2.typeID AS typeID, itr.typeID AS materialTypeID, itr.quantity AS quantity, 1 AS damagePerJob, 1 AS activityID FROM invTypeReactions itr JOIN invTypes i ON (itr.typeID = i.typeID AND i.published = 1) JOIN invTypeReactions itr2 ON (itr2.reactionTypeID = itr.reactionTypeID AND itr2.input = 0) JOIN invTypes i2 ON (itr2.typeID = i2.typeID AND i2.published = 1) JOIN invGroups g ON i2.groupID = g.groupID WHERE itr.input = 1 AND i2.typeName LIKE 'Unrefined%' UNION SELECT NULL, itr2.typeID AS typeID, itr.typeID AS materialTypeID, (itr.quantity) AS quantity, 1 AS damagePerJob, 1 AS activityID FROM invTypeReactions itr JOIN invTypes i ON (itr.typeID = i.typeID AND i.published = 1) JOIN invTypeReactions itr2 ON (itr2.reactionTypeID = itr.reactionTypeID AND itr2.input = 0) JOIN invTypes i2 ON (itr2.typeID = i2.typeID AND i2.published = 1) JOIN invGroups g ON (i2.groupID = g.groupID AND g.groupID = 974) WHERE itr.input = 1 ORDER BY typeID
#req5.field1=field1
#req5.field2=typeID
#req5.field3=materialTypeID
#req5.field4=quantity
#req5.field5=damagePerJob
#req5.field6=activityID
#req5.fieldStrPos=10
#req5.compressedStrPos=20
#req5.table=item_materials

#req6.name=Regions
#req6.disabled=false
#req6.sql=SELECT regionID,regionName FROM mapRegions
#req6.field1=regionID
#req6.field2=regionName
#req6.fieldStrPos=1
#req6.numberPos=0
#req6.compressedStrPos=20
#req6.table=regions

#req7.name=Solar Systems
#req7.disabled=false
#req7.sql=SELECT solarSystemID,regionID,solarSystemName FROM mapSolarSystems
#req7.field1=solarSystemID
#req7.field2=regionID
#req7.field3=solarSystemName
#req7.fieldStrPos=2
#req7.numberPos=0,1
#req7.compressedStrPos=20
#req7.table=solar_systems

req8.name=Stations
req8.disabled=false
req8.sql=SELECT stationID,stationTypeID,solarSystemID,regionID,corporationID,stationName,NULL as field1,NULL as field2,NULL as field3,NULL as field4 FROM staStations
req8.field1=stationID
req8.field2=stationTypeID
req8.field3=solarSystemID
req8.field4=regionID
req8.field5=corporationID
req8.field6=stationName
req8.field7=field1
req8.field8=field2
req8.field9=field3
req8.field10=field4
req8.fieldStrPos=5
req8.numberPos=0,1,2,3,4
req8.compressedStrPos=20
req8.table=stations

#req9.name=Invention mapping
#req9.disabled=true
#req9.sql=SELECT distinct NULL as field1,requiredTypeID,i3.typeID as typeID FROM ramTypeRequirements r LEFT OUTER JOIN invTypes i ON (i.typeID = r.requiredTypeID) LEFT OUTER JOIN invTypes i2 ON (i2.typeID = r.typeID) LEFT OUTER JOIN invGroups g ON (i.groupID = g.groupID) LEFT OUTER JOIN invTypes i3 on (i3.typeName = SUBSTR(i.typeName,12,800)) where i2.published = 1 and activityID = 8 and i.typeName like '%Datacore%' UNION SELECT distinct NULL,r.requiredTypeID,r2.requiredTypeID FROM ramTypeRequirements r LEFT OUTER JOIN invBlueprintTypes b on (r.requiredTypeID = b.productTypeID) LEFT OUTER JOIN invTypes i on (i.typeID = b.productTypeID) LEFT OUTER JOIN ramTypeRequirements r2 on (r2.typeID = b.blueprintTypeID) where r.activityID = 8 and b.productTypeID is not null and i.published = 1 and r2.requiredTypeID <> 3380
#req9.field1=field1
#req9.field2=requiredTypeID
#req9.field3=typeID
#req9.fieldStrPos=20
#req9.compressedStrPos=20
#req9.table=invention_mapping

#req10.name=Installation Cost
#req10.disabled=true
#req10.sql=SELECT distinct NULL as field1,containerID as stationID,costInstall,costPerHour,activityID,discountPerGoodStandingPoint,surchargePerBadStandingPoint FROM ramAssemblyLines where activityID in (1,3,4,5,8) order by containerID,activityID
#req10.field1=field1
#req10.field2=stationID
#req10.field3=costInstall
#req10.field4=costPerHour
#req10.field5=activityID
#req10.field6=discountPerGoodStandingPoint
#req10.field7=surchargePerBadStandingPoint
#req10.fieldStrPos=20
#req10.compressedStrPos=20
#req10.table=installation_cost

req11.name=Planet schematics
req11.disabled=false
req11.sql=SELECT schematicID, cycleTime FROM planetSchematics
req11.field1=schematicID
req11.field2=cycleTime
req11.fieldStrPos=20
req11.numberPos=0,1
req11.compressedStrPos=20
req11.table=planet_schematics

req12.name=Planet schematics type map
req12.disabled=false
req12.sql=SELECT schematicID, typeID, CASE WHEN isInput = 1 THEN 1 ELSE 0 END as isInput, quantity FROM planetSchematicsTypeMap
req12.field1=schematicID
req12.field2=typeID
req12.field3=isInput
req12.field4=quantity
req12.fieldStrPos=20
req12.numberPos=0,1,2,3
req12.compressedStrPos=20
req12.table=planet_schematics_type_map

req13.name=Reaction materials
req13.disabled=false
req13.sql=SELECT itr2.typeID AS typeID, itr.typeID AS materialTypeID, (itr.quantity * COALESCE(d.valueInt, d.valueFloat)) AS quantity, (itr2.quantity * COALESCE(d2.valueInt, d2.valueFloat)) AS produceQuantity FROM invTypeReactions itr JOIN invTypes i ON (itr.typeID = i.typeID AND i.published = 1) JOIN invTypeReactions itr2 ON (itr2.reactionTypeID = itr.reactionTypeID AND itr2.input = 0) JOIN invTypes i2 ON (itr2.typeID = i2.typeID AND i2.published = 1) JOIN invGroups g ON (i2.groupID = g.groupID AND g.categoryID NOT IN (17, 43)) JOIN dgmTypeAttributes d ON (i.typeID = d.typeID AND d.attributeID = 726) JOIN dgmTypeAttributes d2 ON (itr2.typeID = d2.typeID AND d2.attributeID = 726) WHERE itr.input = 1 AND i2.typeName NOT LIKE 'Unrefined%' UNION SELECT itr2.typeID AS typeID, itr.typeID AS materialTypeID, itr.quantity AS quantity, itr2.quantity AS produceQuantity FROM invTypeReactions itr JOIN invTypes i ON (itr.typeID = i.typeID AND i.published = 1) JOIN invTypeReactions itr2 ON (itr2.reactionTypeID = itr.reactionTypeID AND itr2.input = 0) JOIN invTypes i2 ON (itr2.typeID = i2.typeID AND i2.published = 1) JOIN invGroups g ON i2.groupID = g.groupID WHERE itr.input = 1 AND i2.typeName LIKE 'Unrefined%' UNION SELECT itr2.typeID AS typeID, itr.typeID AS materialTypeID, itr.quantity AS quantity, itr2.quantity AS produceQuantity FROM invTypeReactions itr JOIN invTypes i ON (itr.typeID = i.typeID AND i.published = 1) JOIN invTypeReactions itr2 ON (itr2.reactionTypeID = itr.reactionTypeID AND itr2.input = 0) JOIN invTypes i2 ON (itr2.typeID = i2.typeID AND i2.published = 1) JOIN invGroups g ON (i2.groupID = g.groupID AND g.groupID = 974) WHERE itr.input = 1
req13.field1=typeID
req13.field2=materialTypeID
req13.field3=quantity
req13.field4=produceQuantity
req13.fieldStrPos=10
req13.numberPos=0,1,2,3
req13.compressedStrPos=20
req13.table=reaction_materials

req14.name=Refine materials
req14.disabled=false
req14.sql=SELECT tm.typeID, tm.materialTypeID, tm.quantity FROM invTypeMaterials tm LEFT OUTER JOIN invTypes i2 ON (tm.typeID = i2.typeID) LEFT OUTER JOIN invGroups g ON (i2.groupID = g.groupID) WHERE tm.typeID IS NOT NULL AND tm.materialTypeID IS NOT NULL AND g.categoryID = 25 AND i2.published = 1
req14.field1=typeID
req14.field2=materialTypeID
req14.field3=quantity
req14.fieldStrPos=10
req14.numberPos=0,1,2
req14.compressedStrPos=20
req14.table=refine_materials
